name: CI/CD Pipeline
on:
  push:
    branches:
      - dev_*

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Build WAR file
        run: |
          chmod +x ./gradlew
          ./gradlew war

      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-war
          path: build/libs/*.war
          if-no-files-found: warn
          compression-level: 0
          overwrite: false
          include-hidden-files: false
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/21.0.7-6/x64
          JAVA_HOME_21_X64: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/21.0.7-6/x64

#define deployJobs with build job artifact
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download WAR artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp-war
          path: ./artifacts

      - name: deploy to server
        run: |
          echo "Deploying WAR file to server..."
          ls -la ./artifacts
          # /docker/download.sh を実行して検証環境にwarファイルをダウンロード
          chmod +x ./docker/download.sh
            ./docker/download.sh -r OdenEater/gradleWEB -d /windows/org